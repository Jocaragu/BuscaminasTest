@page "/"
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (invalidName)
{
	<div>
		PLEASE ENTER A VALID NAME
	</div>
	<br />
}

<EditForm Model="currentPlayer" OnSubmit="MyNameIs">
	<div>
		<label for="currentPlayerName">What is your name?</label>
		<InputText id="currentPlayerName" @bind-Value="currentPlayer.Name" class="form-control"></InputText>
	</div>
	<br />
	<button type="submit" class="btn btn-success">Enter</button>
</EditForm>


@code {
	Player currentPlayer = new();

	private List<Player> Lobby = new();

	private bool invalidName = false;

	protected override async Task OnInitializedAsync()
	{
		var result = await Http.GetFromJsonAsync<List<Player>>("api/Lobby");
		if(result != null)
		{
			Lobby = result;
		}
	}

	private async Task MyNameIs()
	{
		if(currentPlayer.Name == null || currentPlayer.Name == "")
		{
			invalidName = true;
			StateHasChanged();
		}
		else
		{
			invalidName = false;
			if (Lobby.Count > 0)
			{
				foreach (var listedPlayer in Lobby)
				{
					if (currentPlayer.Name != null && listedPlayer.Name != null)
					{
						if (currentPlayer.Name == listedPlayer.Name)
						{
							currentPlayer = listedPlayer;
						}
						else
						{
							await RecruitCurrentPlayer();
						}
					}
				}
			}
			else if (Lobby.Count < 1)
			{
				await RecruitCurrentPlayer();
			}
			EnterLobby();
		}
	}

	private void EnterLobby()
	{
		NavigationManager.NavigateTo($"/game/{currentPlayer.Id}");
	}

	protected async Task RecruitCurrentPlayer()
	{
		var result = await Http.PostAsJsonAsync("api/Lobby", currentPlayer);
		var newIdString = await result.Content.ReadAsStringAsync();
		int newId = int.Parse(newIdString);
		currentPlayer.Id = newId;
	}
}