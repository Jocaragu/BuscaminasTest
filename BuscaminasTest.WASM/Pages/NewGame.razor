@page "/game/{id:int}"
@inject HttpClient Http

@if(gameRendered)
{
	<Minesweeper GameWidth="@newGameWidth" GameHeight="@newGameHeight" TheBraveMiner="currentPlayer"></Minesweeper>
}
else
{
	<EditForm Model="gameRendered" OnSubmit="RenderGame">
		<div>
			<label for="width">Board width</label>
			<InputNumber id="width" @bind-Value="newGameWidth"></InputNumber>
		</div>
		<br />
		<div>
			<label for="height">Board height</label>
			<InputNumber id="height" @bind-Value="newGameHeight"></InputNumber>
		</div>
		<br />
		<button type="submit" class="btn btn-success">Create game</button>
	</EditForm>
}

@code{
	[Parameter]
	public int? Id { get; set; }

	Player currentPlayer = new();

	protected override async Task OnParametersSetAsync()
	{
		var stablishedCurrentPlayer = await Http.GetFromJsonAsync<Player>($"api/Participants/{Id}");
		if(stablishedCurrentPlayer != null)
		{
			currentPlayer = stablishedCurrentPlayer;
		}
	}

	private bool gameRendered = false;
	private int newGameWidth;
	private int newGameHeight;
	
	private void RenderGame()
	{
		gameRendered = true;
	}
}
